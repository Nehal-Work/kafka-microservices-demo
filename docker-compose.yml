version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - microservices-net

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - microservices-net

  order-service-1:
    build:
      context: ./order-service
    hostname: order-service-1
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    networks:
      - microservices-net

  order-service-2:
    build:
      context: ./order-service
    hostname: order-service-2
    ports:
      - "8082:8081"  # maps container's 8081 to host's 8082
    depends_on:
      - kafka
    networks:
      - microservices-net

  inventory-service:
    build:
      context: ./inventory-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - redis
    networks:
      - microservices-net
    restart: on-failure

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - order-service-1
      - order-service-2
      - inventory-service
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge